//created on: May 5, 2020
package cepTrainingMonitor

//list any import classes here.
import tableTennisInstructor.model.drools.events.*;
import tableTennisInstructor.model.drools.facts.training.*;
import java.util.ArrayList;
import java.lang.Long;


//declare any global variables here


rule "Create badRacketAngleEvent when training lvl iz BEGINER and 2 successive miss have "

    when
    	$tre: TrainingExecution(training.trainingLevel == TrainingLevel.BEGINNER)
    	$lastShot: List(size >= 1) from
        	accumulate($t: 
        				SkillExecutionEvent(trainingExecutionId == $tre.id, 
        									(deltaAngle >= 15.0 || deltaAngle <= -15.0 ) &&
        									badRacketAngleProcessed == false
        									)
        			   over window:time(2s)
        			  ,collectList($t))
    then
        for(Object $o: $lastShot) {
        	 SkillExecutionEvent $o1 = (SkillExecutionEvent) $o;
        	 $o1.setBadRacketAngleProcessed(true);
        	 BadRacketAngleEvent badRaketEvent = new BadRacketAngleEvent();
        	 badRaketEvent.setAngle($o1.deltaAngle);
    		 update($o);
        	 insert(badRaketEvent);
        	 System.out.println("Kreiran event los ugao reketa za pocetnicki nivo");
        }
        
end

rule "Create badRacketAngleEvent when training lvl iz INTERMEDIATE and 2 successive miss have "

    when
    	$tre: TrainingExecution(training.trainingLevel == TrainingLevel.INTERMEDIATE)
    	$lastShot: List(size >= 1) from
        	accumulate($t: 
        				SkillExecutionEvent(trainingExecutionId == $tre.id, 
        									(deltaAngle >= 10.0 || deltaAngle <= -10.0 ) &&
        									badRacketAngleProcessed == false
        									)
        			   over window:time(2s)
        			  ,collectList($t))
    then
        for(Object $o: $lastShot) {
        	 SkillExecutionEvent $o1 = (SkillExecutionEvent) $o;
        	 $o1.setBadRacketAngleProcessed(true);
        	 BadRacketAngleEvent badRaketEvent = new BadRacketAngleEvent();
        	 badRaketEvent.setAngle($o1.deltaAngle);
    		 update($o);
        	 insert(badRaketEvent);
        	 System.out.println("Kreiran event los ugao reketa za INTERMEDIATE nivo");
        }
        
end


rule "Create badRacketAngleEvent when training lvl iz ADVANCED and 2 successive miss have "

    when
    	$tre: TrainingExecution(training.trainingLevel == TrainingLevel.ADVANCED)
    	$lastShot: List(size >= 1) from
        	accumulate($t: 
        				SkillExecutionEvent(trainingExecutionId == $tre.id, 
        									(deltaAngle >= 5.0 || deltaAngle <= -5.0 ) &&
        									badRacketAngleProcessed == false
        									)
        			   over window:time(2s)
        			  ,collectList($t))
    then
        for(Object $o: $lastShot) {
        	 SkillExecutionEvent $o1 = (SkillExecutionEvent) $o;
        	 $o1.setBadRacketAngleProcessed(true);
        	 BadRacketAngleEvent badRaketEvent = new BadRacketAngleEvent();
        	 badRaketEvent.setAngle($o1.deltaAngle);
    		 update($o);
        	 insert(badRaketEvent);
        	 System.out.println("Kreiran event los ugao reketa za ADVANCED nivo");
        }
        
end



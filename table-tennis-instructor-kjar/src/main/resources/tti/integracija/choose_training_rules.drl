//created on: May 2, 2020
package integracija

//list any import classes here.
import tableTennisInstructor.model.drools.facts.*;
import tableTennisInstructor.model.drools.facts.training.*;

rule "Choose advanced trainig level when previous knowledge advanced and other conditions"
	no-loop 
	salience 90
    when
        $tfc : TrainingChooseFact(choosenLevel != TrainingLevel.BEGINNER,
        						 userHealthState == UserHealthState.GOOD, 
        						 trainingDuradtion != TrainingDuration.SHORT,
        						 previousKnowledge == Knowledge.ADVANCED) @Watch (!userId)
    then
    	System.out.println("napredni tr lvl");
    	$tfc.setChoosenLevel(TrainingLevel.ADVANCED);
        update( $tfc );
end

rule "Choose advanced trainig level when similiar knowledge advanced and other conditions"
	no-loop 
	salience 90
    when
        $tfc : TrainingChooseFact(choosenLevel != TrainingLevel.BEGINNER,
        						 userHealthState == UserHealthState.GOOD, 
        						 trainingDuradtion != TrainingDuration.SHORT,
        						 similarKnowledge == Knowledge.ADVANCED) @Watch (!userId)
    then
    	System.out.println("napredni tr lvl");
    	$tfc.setChoosenLevel(TrainingLevel.ADVANCED);
        update( $tfc );
end


rule "Choose beginer trainig level"
	no-loop 
	salience 100
    when
        $tfc : TrainingChooseFact(userHealthState == UserHealthState.BAD || 
        						 previousKnowledge == Knowledge.BEGINER ||
        						 similarKnowledge == Knowledge.BEGINER) @Watch (!userId);
    then
    	System.out.println("beginer tr lvl");
    	$tfc.setChoosenLevel(TrainingLevel.BEGINNER);
        update( $tfc );
end

rule "Choose intermediate training level"
	no-loop 
	salience 80
    when
        $tfc : TrainingChooseFact(choosenLevel == TrainingLevel.UNKNOWN,
        						 userHealthState != UserHealthState.UNKNOWN);
    then
    	System.out.println("srednji tr lvl");
    	$tfc.setChoosenLevel(TrainingLevel.INTERMEDIATE);
        update( $tfc );
end

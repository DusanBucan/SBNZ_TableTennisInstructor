//created on: May 3, 2020
package trainingPlan

import tableTennisInstructor.model.drools.facts.*;
import tableTennisInstructor.model.drools.facts.training.*;
import tableTennisInstructor.model.drools.facts.skill.*;

rule "Choose BEGINER similiar skill knowledge if does not know any similar skill"
	when
		$trReq: TrainingChooseRequestFact($userId: userId, $trainHistory: trainHistory, $desiredSkill: desiredSkill)
    	$tfc: TrainingChooseFact(userId == $userId, similarKnowledge == Knowledge.UNKNOWN)
    	$similarSkills: SimilarSkillFact(skill.skillId == $desiredSkill.skillId)
    	
    	Number(intValue == 0) from accumulate (
    	 						TrainingExecution(
    	 							$similarSkills.similarSkills contains training.skill.skillId
    	 						)	 
    	 						from $trainHistory,
    	 						init(int count = 0;),
    	 						action(count += 1;),
    	 						reverse(count -= 1;),
    	 						result(count)
    	 					)
	then
		System.out.println("Slicno znanje je POCETNICKO jer nema nista u listi");
    	$tfc.setSimilarKnowledge(Knowledge.BEGINER);
    	update($tfc);
end


rule "Choose BEGINER similiar skill knowledge if knows only one similar skill at BEGINER level"
	salience 80
	when
		$trReq: TrainingChooseRequestFact($userId: userId, $trainHistory: trainHistory, $desiredSkill: desiredSkill)
    	$tfc: TrainingChooseFact(userId == $userId, similarKnowledge == Knowledge.UNKNOWN)
    	$similarSkills: SimilarSkillFact(skill.skillId == $desiredSkill.skillId)
    	
    	Number(intValue == 1) from accumulate (
    	 						TrainingExecution(
    	 							$similarSkills.similarSkills contains training.skill.skillId,
    	 							training.skill.skillLevel == SkillLevel.BEGINER
    	 						)	 
    	 						from $trainHistory,
    	 						init(int count = 0;),
    	 						action(count += 1;),
    	 						reverse(count -= 1;),
    	 						result(count)
    	 					)
	then
		System.out.println("Slicno znanje je POCETNICKO jer zna samo jednu slicnu pocetnickog lvl");
    	$tfc.setSimilarKnowledge(Knowledge.BEGINER);
    	update($tfc);
end

rule "Choose INTERMEDIATE similiar skill knowledge if knows only more similar skill at BEGINER level"
	salience 90
	when
		$trReq: TrainingChooseRequestFact($userId: userId, $trainHistory: trainHistory, $desiredSkill: desiredSkill)
    	$tfc: TrainingChooseFact(userId == $userId, similarKnowledge == Knowledge.UNKNOWN)
    	$similarSkills: SimilarSkillFact(skill.skillId == $desiredSkill.skillId)
    	
    	Number(intValue > 1) from accumulate (
    	 						TrainingExecution(
    	 							$similarSkills.similarSkills contains training.skill.skillId,
    	 							training.skill.skillLevel == SkillLevel.BEGINER
    	 						)	 
    	 						from $trainHistory,
    	 						init(int count = 0;),
    	 						action(count += 1;),
    	 						reverse(count -= 1;),
    	 						result(count)
    	 					)
	then
		System.out.println("Slicno znanje je INTERMEDIATE jer zna samo vise slicnih pocetnickog lvl");
    	$tfc.setSimilarKnowledge(Knowledge.INTERMEDIATE);
    	update($tfc);
end

rule "Choose INTERMEDIATE similiar skill knowledge if knows one similar skill at INTERMEDIATE level"
	salience 90
	when
		$trReq: TrainingChooseRequestFact($userId: userId, $trainHistory: trainHistory, $desiredSkill: desiredSkill)
    	$tfc: TrainingChooseFact(userId == $userId, similarKnowledge == Knowledge.UNKNOWN)
    	$similarSkills: SimilarSkillFact(skill.skillId == $desiredSkill.skillId)
    	
    	Number(intValue == 1) from accumulate (
    	 						TrainingExecution(
    	 							$similarSkills.similarSkills contains training.skill.skillId,
    	 							training.skill.skillLevel == SkillLevel.INTERMEDIATE
    	 						)	 
    	 						from $trainHistory,
    	 						init(int count = 0;),
    	 						action(count += 1;),
    	 						reverse(count -= 1;),
    	 						result(count)
    	 					)
	then
		System.out.println("Slicno znanje je INTERMEDIATE jer zna jednu slicnu INTERMEDIATE lvl");
    	$tfc.setSimilarKnowledge(Knowledge.INTERMEDIATE);
    	update($tfc);
end

rule "Choose ADVANCED similiar skill knowledge if knows more similar skill at INTERMEDIATE level"
	salience 100
	when
		$trReq: TrainingChooseRequestFact($userId: userId, $trainHistory: trainHistory, $desiredSkill: desiredSkill)
    	$tfc: TrainingChooseFact(userId == $userId, similarKnowledge == Knowledge.UNKNOWN)
    	$similarSkills: SimilarSkillFact(skill.skillId == $desiredSkill.skillId)
    	
    	Number(intValue > 1) from accumulate (
    	 						TrainingExecution(
    	 							$similarSkills.similarSkills contains training.skill.skillId,
    	 							training.skill.skillLevel == SkillLevel.INTERMEDIATE
    	 						)	 
    	 						from $trainHistory,
    	 						init(int count = 0;),
    	 						action(count += 1;),
    	 						reverse(count -= 1;),
    	 						result(count)
    	 					)
	then
		System.out.println("Slicno znanje je ADVANCED jer zna vise slicnih INTERMEDIATE lvl");
    	$tfc.setSimilarKnowledge(Knowledge.ADVANCED);
    	update($tfc);
end

rule "Choose ADVANCED similiar skill knowledge if knows one or more similar skill at ADVANCED level"
	salience 100
	when
		$trReq: TrainingChooseRequestFact($userId: userId, $trainHistory: trainHistory, $desiredSkill: desiredSkill)
    	$tfc: TrainingChooseFact(userId == $userId, similarKnowledge == Knowledge.UNKNOWN)
    	$similarSkills: SimilarSkillFact(skill.skillId == $desiredSkill.skillId)
    	
    	Number(intValue >= 1) from accumulate (
    	 						TrainingExecution(
    	 							$similarSkills.similarSkills contains training.skill.skillId,
    	 							training.skill.skillLevel == SkillLevel.ADVANCED
    	 						)	 
    	 						from $trainHistory,
    	 						init(int count = 0;),
    	 						action(count += 1;),
    	 						reverse(count -= 1;),
    	 						result(count)
    	 					)
	then
		System.out.println("Slicno znanje je ADVANCED jer zna jednu ili vise slicnih ADVANCED lvl");
    	$tfc.setSimilarKnowledge(Knowledge.ADVANCED);
    	update($tfc);
end

